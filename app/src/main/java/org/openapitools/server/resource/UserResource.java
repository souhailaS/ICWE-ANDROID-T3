/**
 * Shopping Center
 * This API provides us with different information about the users to use in the shopping centre to provide a better experience in the visit
 *
 * OpenAPI spec version: 1.0
 * Contact: spilab.uex@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.resource;


import org.openapitools.server.model.*;
import org.openapitools.server.response.*;

import java.util.*;
import org.json.*;


import org.openapitools.server.model.Location;
import org.openapitools.server.model.Temperature;



import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.UnsupportedEncodingException;
import android.content.Context;
import org.openapitools.server.service.MqttClient;
import org.openapitools.server.service.MQTTService;
import org.eclipse.paho.client.mqttv3.MqttException;


public class UserResource {

    private Context context;
    private MqttClient client;

    private UserResponse userResponse;

    public UserResource(Context context) {
        this.context = context;
        client = new MqttClient();
    }

  public Exception executeMethod(UserResponse response) throws MqttException, UnsupportedEncodingException{

        userResponse=response;

      switch (response.getMethod()){
          case "getLocation":
           getLocation();
          break;
          case "getMusic":
           getMusic();
          break;
          case "getTemperature":
           getTemperature();
          break;
          default:
              client.publishMessage( MQTTService.getClient(), "Error: Not Found Method",1,userResponse.getSender());
              return new Exception("Not found method.");
      }

      return null;
  }

  /**
  * Gets the current location
  * 
   * @return Location
  */
  public void getLocation () throws MqttException, UnsupportedEncodingException{

     //TODO: Process the information, etc.



     //TODO: Return Location on reply.
      client.publishMessage( MQTTService.getClient(), "getLocation OK",1,userResponse.getSender());
  }
  /**
  * Gets a list of favourite music genres
  * 
   * @return List<String>
  */
  public void getMusic () throws MqttException, UnsupportedEncodingException{

     //TODO: Process the information, etc.



     //TODO: Return List<String> on reply.
      client.publishMessage( MQTTService.getClient(), "getMusic OK",1,userResponse.getSender());
  }
  /**
  * Gets the environment temperature
  * 
   * @return Temperature
  */
  public void getTemperature () throws MqttException, UnsupportedEncodingException{

     //TODO: Process the information, etc.



     //TODO: Return Temperature on reply.
      client.publishMessage( MQTTService.getClient(), "getTemperature OK",1,userResponse.getSender());
  }





}
